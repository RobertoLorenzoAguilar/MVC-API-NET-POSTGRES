// <auto-generated />
using System;
using Datos.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Datos.Migrations
{
    [DbContext(typeof(ContratoDbContext))]
    [Migration("20240307213940_AgregandoActivoTablaModulo")]
    partial class AgregandoActivoTablaModulo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Datos.Models.Modulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("modulo_pk");

                    b.ToTable("modulo", (string)null);
                });

            modelBuilder.Entity("Datos.Models.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("permiso_pk");

                    b.ToTable("permiso", (string)null);
                });

            modelBuilder.Entity("Datos.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("rol_pk");

                    b.ToTable("rol", (string)null);
                });

            modelBuilder.Entity("Datos.Models.RolPermisoModulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<int>("ModuloId")
                        .HasColumnType("integer")
                        .HasColumnName("modulo_id");

                    b.Property<int>("PermisoId")
                        .HasColumnType("integer")
                        .HasColumnName("permiso_id");

                    b.Property<int>("RolId")
                        .HasColumnType("integer")
                        .HasColumnName("rol_id");

                    b.HasKey("Id")
                        .HasName("rol_permiso_modulo_pk");

                    b.HasIndex("ModuloId");

                    b.HasIndex("PermisoId");

                    b.HasIndex("RolId");

                    b.ToTable("rol_permiso_modulo", (string)null);
                });

            modelBuilder.Entity("Datos.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("correo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Pwd")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("clave");

                    b.Property<int?>("RolId")
                        .HasColumnType("integer")
                        .HasColumnName("rol_id");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("usuario_pk");

                    b.HasIndex("RolId");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("Datos.Models.RolPermisoModulo", b =>
                {
                    b.HasOne("Datos.Models.Modulo", "Modulo")
                        .WithMany("RolPermisoModulos")
                        .HasForeignKey("ModuloId")
                        .IsRequired()
                        .HasConstraintName("rol_permiso_modulo___fk_modulo");

                    b.HasOne("Datos.Models.Permiso", "Permiso")
                        .WithMany("RolPermisoModulos")
                        .HasForeignKey("PermisoId")
                        .IsRequired()
                        .HasConstraintName("rol_permiso_modulo___fk_pemiso");

                    b.HasOne("Datos.Models.Rol", "Rol")
                        .WithMany("RolPermisoModulos")
                        .HasForeignKey("RolId")
                        .IsRequired()
                        .HasConstraintName("rol_permiso_modulo___fk_rol");

                    b.Navigation("Modulo");

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Datos.Models.Usuario", b =>
                {
                    b.HasOne("Datos.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .HasConstraintName("usuario___fk");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Datos.Models.Modulo", b =>
                {
                    b.Navigation("RolPermisoModulos");
                });

            modelBuilder.Entity("Datos.Models.Permiso", b =>
                {
                    b.Navigation("RolPermisoModulos");
                });

            modelBuilder.Entity("Datos.Models.Rol", b =>
                {
                    b.Navigation("RolPermisoModulos");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
